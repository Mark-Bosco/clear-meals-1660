name: Publish preview update with APK release

on:
  workflow_dispatch:
  push:
    branches: ['*']

jobs:
  create_preview_build:
    runs-on: ubuntu-latest
    env:
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Set up Node.js (for EAS CLI)
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üõ† Install dependencies
        run: |
          sudo apt update && sudo apt install gh jq wget -y
          npm install -g eas-cli
          npm install dotenv  # Install dotenv for loading environment variables

      - name: üß™ Debug - Check if EXPO_TOKEN is present
        run: echo "EXPO_TOKEN is set? => ${EXPO_TOKEN:+yes}"

      - name: üöÄ Trigger EAS Preview Build
        run: |
          echo "Triggering preview build..."
          eas build --platform android --profile preview --non-interactive --no-wait

          - name: ‚è≥ Wait for build to finish
          run: |
            echo "Waiting for preview build to complete..."
        
            BUILD_ID=""
            STATUS=""
        
            while [ "$STATUS" != "finished" ]; do
              echo "üîç Checking build status..."
        
              RESPONSE=$(eas build:list --platform android --limit 1 --json)
              BUILD_ID=$(echo "$RESPONSE" | jq -r '.[] | select(.metadata.buildProfile == "preview") | .id')
              STATUS=$(echo "$RESPONSE" | jq -r '.[] | select(.metadata.buildProfile == "preview") | .status')
        
              if [ -z "$BUILD_ID" ]; then
                echo "‚ùå Could not find a build ID. Retrying..."
                sleep 20
                continue
              fi
        
              echo "üõ† Build ID: $BUILD_ID, Status: $STATUS"
        
              if [ "$STATUS" != "finished" ]; then
                echo "‚è≥ Still building... sleeping for 30s"
                sleep 30
              fi
            done
        
            echo "‚úÖ Build complete! ID: $BUILD_ID"
            echo "BUILD_ID=$BUILD_ID" >> $GITHUB_ENV
        


      - name: üì¶ Download APK
        run: |
          APK_URL=$(eas build:list --status finished --platform android --json | jq -r '.[] | select(.metadata.buildProfile == "preview") | .artifacts.buildUrl' | head -n 1)

          if [ -z "$APK_URL" ]; then
            echo "‚ùå No APK found. Aborting."
            exit 1
          fi

          echo "‚¨áÔ∏è Downloading APK from: $APK_URL"
          wget -O preview.apk "$APK_URL"

          if [ ! -f preview.apk ]; then
            echo "‚ùå APK download failed. Aborting."
            exit 1
          fi

      - name: üöÄ Publish GitHub Release with APK
        run: |
          RELEASE_TAG="preview-$(date +'%Y%m%d%H%M')"
          RELEASE_NAME="Preview Build - $(date +'%Y-%m-%d %H:%M:%S')"

          echo "üì¢ Creating GitHub release: $RELEASE_TAG"
          gh release create "$RELEASE_TAG" preview.apk \
            --title "$RELEASE_NAME" \
            --notes "Automated preview build release for internal testing."
