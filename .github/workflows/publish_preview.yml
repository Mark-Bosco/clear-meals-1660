name: Publish Preview Update with APK Release

on:
  workflow_dispatch:
  push:
    branches: ['*']

jobs:
  create_preview_build:
    runs-on: ubuntu-latest
    env:
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Set up Node.js and EAS CLI
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üõ† Install dependencies and EAS CLI
        run: |
          sudo apt update
          sudo apt install -y openjdk-11-jdk wget git curl unzip zip
          npm install -g eas-cli
          npm install dotenv

      - name: üîê Decode google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}" | base64 --decode > ./build/google-services.json
          echo "‚úÖ google-services.json written"
          ls -l google-services.json
        

      - name: ‚öôÔ∏è Configure EAS project
        run: |
          eas build:configure --platform android

      - name: üì¶ Build APK Locally with EAS
        run: |
          eas build --platform android --profile preview --local

      - name: üöÄ Publish GitHub Release with APK
        run: |
          APK_PATH=$(find . -name '*.apk' | head -n 1)
          if [ ! -f "$APK_PATH" ]; then
            echo "‚ùå APK build failed. Aborting."
            exit 1
          fi

          RELEASE_TAG="preview-$(date +'%Y%m%d%H%M')"
          RELEASE_NAME="Preview Build - $(date +'%Y-%m-%d %H:%M:%S')"

          echo "üì¢ Creating GitHub release: $RELEASE_TAG"
          gh release create "$RELEASE_TAG" "$APK_PATH" \
            --title "$RELEASE_NAME" \
            --notes "Automated preview build release for internal testing."
